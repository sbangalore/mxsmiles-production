{"version":3,"file":"framer-motion-Csc3AcnG.js","sources":["../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../../../node_modules/framer-motion/dist/es/animation/hooks/animation-controls.mjs","../../../node_modules/framer-motion/dist/es/animation/hooks/use-animation.mjs","../../../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from 'motion-utils';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../interfaces/visual-element.mjs';\n\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            invariant(hasMounted, \"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            const animations = [];\n            subscribers.forEach((visualElement) => {\n                animations.push(animateVisualElement(visualElement, definition, {\n                    transitionOverride,\n                }));\n            });\n            return Promise.all(animations);\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls, setValues };\n","import { animationControls } from './animation-controls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useIsomorphicLayoutEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","current","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","variantLabelsAsDependency","prop","join","motionComponentSymbol","Symbol","for","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","onMount","mount","unmount","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","context","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","getValueState","values","getVelocity","resolveVariantFromProps","definition","custom","velocity","isKeyframesTarget","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","tag","renderHTML","element","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","e","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useHTMLProps","htmlProps","useInitialMotionValues","useStyle","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","positionalKeys","clearTime","time","newTime","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","setTarget","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","isNone","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","flatten","ease","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","bounce","visualDuration","restSpeed","restDelta","done","stiffness","damping","mass","isResolvedFromDuration","springOptions","root","PI","derived","envelope","derivative","millisecondsToSeconds","exponentialDecay","exp","d","f","initialGuess","result","approximateRoot","secondsToMilliseconds","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calcGeneratorDuration","maxGeneratorDuration","generateLinearEasing","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","isBezierDefinition","invariant","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","remaining","offsetProgress","fillOffset","defaultOffset","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","supportsLinearEasing","isWaapiSupportedEasing","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","mapEasingToNativeEasing","iterations","direction","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","getValueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","GroupPlaybackControls","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","setDragLock","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","press","endEvent","success","useGlobalTarget","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","setVariants","variantLabels","animationControls","subscribers","setValues","useAnimation","thresholds","useInView","setInView","useState","elementOrSelector","elements","resolveElements","activeIntersections","observer","newOnEnd","disconnect"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215]}