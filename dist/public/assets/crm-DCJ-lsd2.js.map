{"version":3,"file":"crm-DCJ-lsd2.js","sources":["../../../client/src/components/ui/tabs.tsx","../../../client/src/pages/crm.tsx","../../../client/src/hooks/useAuth.ts","../../../client/src/lib/authUtils.ts"],"sourcesContent":["import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport CrmLogin from \"./crm-login\";\nimport { Phone, Mail, MessageSquare, Calendar, DollarSign, Users, TrendingUp, Activity, LogOut } from \"lucide-react\";\nimport type { Lead, LeadActivity } from \"@shared/schema\";\n\nconst statusColors = {\n  new: \"bg-blue-500\",\n  contacted: \"bg-yellow-500\",\n  qualified: \"bg-green-500\",\n  proposal_sent: \"bg-purple-500\",\n  won: \"bg-emerald-500\",\n  lost: \"bg-red-500\",\n};\n\nconst priorityColors = {\n  low: \"bg-gray-500\",\n  medium: \"bg-orange-500\",\n  high: \"bg-red-500\",\n  urgent: \"bg-red-700\",\n};\n\nexport default function CrmPage() {\n  const { isAuthenticated, isLoading } = useAuth();\n  const { toast } = useToast();\n  const [filters, setFilters] = useState({\n    status: \"\",\n    priority: \"\",\n    source: \"\",\n    search: \"\",\n  });\n\n  const queryClient = useQueryClient();\n\n  // Handle authentication redirect\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      toast({\n        title: \"Unauthorized\",\n        description: \"You need to sign in to access the CRM system.\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n      return;\n    }\n  }, [isAuthenticated, isLoading, toast]);\n\n  // Fetch dashboard stats\n  const { data: dashboardData, error: dashboardError } = useQuery<{ success: boolean; data: any }>({\n    queryKey: [\"/api/crm/dashboard\"],\n    enabled: isAuthenticated,\n  });\n\n  // Fetch leads\n  const { data: leadsData, error: leadsError } = useQuery<{ success: boolean; data: Lead[] }>({\n    queryKey: [\"/api/crm/leads\", filters],\n    enabled: isAuthenticated,\n  });\n\n  // Handle authentication errors\n  useEffect(() => {\n    if (dashboardError && isUnauthorizedError(dashboardError as Error)) {\n      toast({\n        title: \"Session Expired\",\n        description: \"Please sign in again to continue.\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [dashboardError, toast]);\n\n  // Show login page if not authenticated\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return <CrmLogin />;\n  }\n\n  const leads = leadsData?.data || [];\n  const dashboard = dashboardData?.data || null;\n\n  const formatPhoneNumber = (phone: string) => {\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 10) {\n      return `(${cleaned.slice(0, 3)}) ${cleaned.slice(3, 6)}-${cleaned.slice(6)}`;\n    }\n    return phone;\n  };\n\n  const getStatusColor = (status: string) => statusColors[status as keyof typeof statusColors] || \"bg-gray-500\";\n  const getPriorityColor = (priority: string) => priorityColors[priority as keyof typeof priorityColors] || \"bg-gray-500\";\n\n  const handleLogout = () => {\n    window.location.href = \"/api/logout\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-8 flex justify-between items-center\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">CRM Dashboard</h1>\n            <p className=\"text-gray-600\">Manage your sales leads and track performance</p>\n          </div>\n          <Button variant=\"outline\" onClick={handleLogout}>\n            <LogOut className=\"w-4 h-4 mr-2\" />\n            Logout\n          </Button>\n        </div>\n\n        <Tabs defaultValue=\"dashboard\" className=\"space-y-6\">\n          <div className=\"flex justify-between items-center\">\n            <TabsList>\n              <TabsTrigger value=\"dashboard\">Dashboard</TabsTrigger>\n              <TabsTrigger value=\"leads\">Leads</TabsTrigger>\n              <TabsTrigger value=\"activities\">Activities</TabsTrigger>\n            </TabsList>\n            <Link href=\"/email-test\">\n              <Button variant=\"outline\" size=\"sm\">\n                <Mail className=\"h-4 w-4 mr-2\" />\n                Email Test\n              </Button>\n            </Link>\n          </div>\n\n          <TabsContent value=\"dashboard\" className=\"space-y-6\">\n            {dashboard ? (\n              <>\n                {/* Stats Cards */}\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                  <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                      <CardTitle className=\"text-sm font-medium\">Total Leads</CardTitle>\n                      <Users className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-2xl font-bold\">{dashboard.totalLeads}</div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                      <CardTitle className=\"text-sm font-medium\">New Leads</CardTitle>\n                      <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-2xl font-bold\">{dashboard.newLeads}</div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                      <CardTitle className=\"text-sm font-medium\">Won Deals</CardTitle>\n                      <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-2xl font-bold\">{dashboard.wonLeads}</div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                      <CardTitle className=\"text-sm font-medium\">Proposals Sent</CardTitle>\n                      <Activity className=\"h-4 w-4 text-muted-foreground\" />\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"text-2xl font-bold\">{dashboard.proposalsSent}</div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Charts */}\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Leads by Source</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2\">\n                        {dashboard.leadsBySource.map((item: { source: string; count: number }) => (\n                          <div key={item.source} className=\"flex justify-between items-center\">\n                            <span className=\"capitalize\">{item.source.replace('_', ' ')}</span>\n                            <Badge variant=\"secondary\">{item.count}</Badge>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>Leads by Status</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-2\">\n                        {dashboard.leadsByStatus.map((item: { status: string; count: number }) => (\n                          <div key={item.status} className=\"flex justify-between items-center\">\n                            <div className=\"flex items-center gap-2\">\n                              <div className={`w-3 h-3 rounded-full ${getStatusColor(item.status)}`}></div>\n                              <span className=\"capitalize\">{item.status.replace('_', ' ')}</span>\n                            </div>\n                            <Badge variant=\"secondary\">{item.count}</Badge>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n\n                {/* Recent Activities */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Recent Activities</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {dashboard.recentActivities.slice(0, 5).map((activity: LeadActivity) => (\n                        <div key={activity.id} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\n                          <div className=\"flex-shrink-0\">\n                            {activity.type === 'call' && <Phone className=\"h-4 w-4 text-blue-500\" />}\n                            {activity.type === 'email' && <Mail className=\"h-4 w-4 text-green-500\" />}\n                            {activity.type === 'note' && <MessageSquare className=\"h-4 w-4 text-gray-500\" />}\n                            {activity.type === 'meeting' && <Calendar className=\"h-4 w-4 text-purple-500\" />}\n                            {activity.type === 'status_change' && <Activity className=\"h-4 w-4 text-orange-500\" />}\n                            {activity.type === 'treatment_quote' && <DollarSign className=\"h-4 w-4 text-green-600\" />}\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"font-medium text-sm truncate\">{activity.subject}</p>\n                            <p className=\"text-xs text-gray-500\">\n                              by {activity.performedBy} • {activity.createdAt ? new Date(activity.createdAt).toLocaleDateString() : 'N/A'}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </>\n            ) : (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500\">Loading dashboard data...</p>\n              </div>\n            )}\n          </TabsContent>\n\n          <TabsContent value=\"leads\" className=\"space-y-6\">\n            {/* Filters */}\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                  <Input\n                    placeholder=\"Search leads...\"\n                    value={filters.search}\n                    onChange={(e) => setFilters({ ...filters, search: e.target.value })}\n                  />\n                  <Select value={filters.status} onValueChange={(value) => setFilters({ ...filters, status: value })}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">All Statuses</SelectItem>\n                      <SelectItem value=\"new\">New</SelectItem>\n                      <SelectItem value=\"contacted\">Contacted</SelectItem>\n                      <SelectItem value=\"qualified\">Qualified</SelectItem>\n                      <SelectItem value=\"proposal_sent\">Proposal Sent</SelectItem>\n                      <SelectItem value=\"won\">Won</SelectItem>\n                      <SelectItem value=\"lost\">Lost</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <Select value={filters.priority} onValueChange={(value) => setFilters({ ...filters, priority: value })}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Priority\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">All Priorities</SelectItem>\n                      <SelectItem value=\"low\">Low</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"high\">High</SelectItem>\n                      <SelectItem value=\"urgent\">Urgent</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <Select value={filters.source} onValueChange={(value) => setFilters({ ...filters, source: value })}>\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Source\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">All Sources</SelectItem>\n                      <SelectItem value=\"consultation_form\">Consultation Form</SelectItem>\n                      <SelectItem value=\"contact_form\">Contact Form</SelectItem>\n                      <SelectItem value=\"provider_application\">Provider Application</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Leads List */}\n            <div className=\"grid gap-4\">\n              {leads.map((lead: Lead) => (\n                <Card key={lead.id} className=\"hover:shadow-md transition-shadow\">\n                  <CardContent className=\"pt-6\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-2\">\n                          <h3 className=\"font-semibold\">{lead.fullName}</h3>\n                          <Badge className={`text-white ${getStatusColor(lead.status)}`}>\n                            {lead.status.replace('_', ' ')}\n                          </Badge>\n                          <Badge className={`text-white ${getPriorityColor(lead.priority)}`}>\n                            {lead.priority}\n                          </Badge>\n                        </div>\n                        <div className=\"space-y-1 text-sm text-gray-600\">\n                          <div className=\"flex items-center gap-2\">\n                            <Mail className=\"h-4 w-4\" />\n                            <a href={`mailto:${lead.email}`} className=\"hover:text-blue-600\">\n                              {lead.email}\n                            </a>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Phone className=\"h-4 w-4\" />\n                            <a href={`tel:${lead.phone}`} className=\"hover:text-blue-600\">\n                              {formatPhoneNumber(lead.phone)}\n                            </a>\n                          </div>\n                          {lead.treatmentInterest && (\n                            <div className=\"flex items-center gap-2\">\n                              <Activity className=\"h-4 w-4\" />\n                              <span>Interested in: {lead.treatmentInterest}</span>\n                            </div>\n                          )}\n                        </div>\n                        {lead.notes && (\n                          <p className=\"mt-2 text-sm text-gray-700 bg-gray-50 p-2 rounded\">\n                            {lead.notes}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"flex flex-col items-end gap-2\">\n                        <span className=\"text-xs text-gray-500 capitalize\">\n                          {lead.source.replace('_', ' ')}\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                          {lead.createdAt ? new Date(lead.createdAt).toLocaleDateString() : 'N/A'}\n                        </span>\n                        <Link href={`/crm/lead/${lead.id}`}>\n                          <Button size=\"sm\">View Details</Button>\n                        </Link>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"activities\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Activities</CardTitle>\n                <CardDescription>All recent lead activities and interactions</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {(dashboard?.recentActivities || []).map((activity: LeadActivity) => (\n                    <div key={activity.id} className=\"flex items-start gap-4 p-4 border rounded-lg\">\n                      <div className=\"flex-shrink-0 mt-1\">\n                        {activity.type === 'call' && <Phone className=\"h-5 w-5 text-blue-500\" />}\n                        {activity.type === 'email' && <Mail className=\"h-5 w-5 text-green-500\" />}\n                        {activity.type === 'note' && <MessageSquare className=\"h-5 w-5 text-gray-500\" />}\n                        {activity.type === 'meeting' && <Calendar className=\"h-5 w-5 text-purple-500\" />}\n                        {activity.type === 'status_change' && <Activity className=\"h-5 w-5 text-orange-500\" />}\n                        {activity.type === 'treatment_quote' && <DollarSign className=\"h-5 w-5 text-green-600\" />}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center justify-between mb-1\">\n                          <h4 className=\"font-medium\">{activity.subject}</h4>\n                          <span className=\"text-sm text-gray-500\">\n                            {activity.createdAt ? new Date(activity.createdAt).toLocaleDateString() : 'N/A'}\n                          </span>\n                        </div>\n                        {activity.description && (\n                          <p className=\"text-sm text-gray-600 mb-2\">{activity.description}</p>\n                        )}\n                        <div className=\"flex items-center gap-4 text-xs text-gray-500\">\n                          <span className=\"capitalize\">Type: {activity.type.replace('_', ' ')}</span>\n                          <span>By: {activity.performedBy}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}","import { useQuery } from \"@tanstack/react-query\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}","export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}"],"names":["Tabs","TabsPrimitive.Root","TabsList","React.forwardRef","className","props","ref","jsx","TabsPrimitive.List","cn","displayName","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","statusColors","new","contacted","qualified","proposal_sent","won","lost","priorityColors","low","medium","high","urgent","CrmPage","isAuthenticated","isLoading","data","user","useQuery","queryKey","retry","useAuth","toast","useToast","filters","setFilters","useState","status","priority","source","search","useQueryClient","useEffect","title","description","variant","setTimeout","window","location","href","dashboardData","error","dashboardError","enabled","leadsData","leadsError","test","message","children","jsxs","CrmLogin","leads","dashboard","formatPhoneNumber","phone","cleaned","replace","length","slice","getStatusColor","Button","onClick","LogOut","defaultValue","value","Link","size","Mail","Fragment","Card","CardHeader","CardTitle","Users","CardContent","totalLeads","TrendingUp","newLeads","DollarSign","wonLeads","Activity","proposalsSent","leadsBySource","map","item","Badge","count","leadsByStatus","recentActivities","activity","type","Phone","MessageSquare","Calendar","subject","performedBy","createdAt","Date","toLocaleDateString","id","Input","placeholder","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","lead","fullName","email","treatmentInterest","notes","CardDescription"],"mappings":"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"}