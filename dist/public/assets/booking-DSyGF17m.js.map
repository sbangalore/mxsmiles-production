{"version":3,"file":"booking-DSyGF17m.js","sources":["../../../client/src/lib/analytics.ts","../../../client/src/components/ui/separator.tsx","../../../client/src/components/ui/avatar.tsx","../../../client/src/pages/booking.tsx"],"sourcesContent":["// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics with optimized loading\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Defer GA loading to improve performance\n  const loadGA = () => {\n    // Add Google Analytics script to the head\n    const script1 = document.createElement('script');\n    script1.async = true;\n    script1.defer = true;\n    script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n    document.head.appendChild(script1);\n\n    // Initialize gtag after script loads\n    script1.onload = () => {\n      const script2 = document.createElement('script');\n      script2.textContent = `\n        window.dataLayer = window.dataLayer || [];\n        function gtag(){dataLayer.push(arguments);}\n        gtag('js', new Date());\n        gtag('config', '${measurementId}', {\n          transport_type: 'beacon',\n          page_title: document.title,\n          page_location: window.location.href\n        });\n      `;\n      document.head.appendChild(script2);\n    };\n  };\n\n  // Load GA after critical resources\n  if (document.readyState === 'complete') {\n    setTimeout(loadGA, 0);\n  } else {\n    window.addEventListener('load', loadGA);\n  }\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};","import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Clock, MapPin, Video, Phone, Calendar as CalendarIcon, User, Mail, MessageSquare, Star, CheckCircle, Users, Building } from \"lucide-react\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { BookingSEO } from \"@/components/seo-optimization\";\nimport { trackEvent } from \"@/lib/analytics\";\n\n// Booking form schema\nconst bookingSchema = z.object({\n  fullName: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().min(10, \"Please enter a valid phone number\"),\n  preferredDate: z.string().min(1, \"Please select a preferred date\"),\n  preferredTime: z.string().min(1, \"Please select a preferred time\"),\n  timezone: z.string().min(1, \"Please select your timezone\"),\n  contactMethod: z.enum([\"phone\", \"email\", \"video\"]),\n  message: z.string().optional(),\n});\n\ntype BookingFormData = z.infer<typeof bookingSchema>;\n\n// BookingForm component\nfunction BookingForm({ serviceType }: { serviceType: 'consultation' | 'provider' | null }) {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const { register, handleSubmit, formState: { errors, isSubmitting }, setValue, reset } = useForm<BookingFormData>({\n    resolver: zodResolver(bookingSchema),\n    defaultValues: {\n      contactMethod: \"video\",\n      timezone: \"America/New_York\",\n      phone: \"+1 \"\n    }\n  });\n\n  const submitBookingMutation = useMutation({\n    mutationFn: async (data: BookingFormData & { serviceType: string }) => {\n      // Map form data to backend schema\n      const backendData = {\n        fullName: data.fullName,\n        email: data.email,\n        phone: data.phone,\n        preferredDate: data.preferredDate,\n        preferredTime: data.preferredTime,\n        timeZone: data.timezone,\n        contactMethod: data.contactMethod,\n        serviceInterest: data.serviceType === 'consultation' ? 'Free Patient Consultation' : 'Provider Partnership',\n        treatmentInterest: data.serviceType === 'consultation' ? 'Free Patient Consultation' : 'Provider Partnership',\n        message: data.message || '',\n        consultationType: data.contactMethod,\n      };\n\n      const response = await fetch(\"/api/consultation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(backendData),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Booking submission error:', errorData);\n        throw new Error(errorData.message || \"Failed to submit booking\");\n      }\n      \n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsSubmitted(true);\n      toast({\n        title: \"✅ Booking Request Submitted!\",\n        description: \"We'll contact you within 24 hours to confirm your appointment. Check your email for confirmation details.\",\n      });\n      reset(); // Reset form fields\n    },\n    onError: (error: any) => {\n      console.error('Booking mutation error:', error);\n      toast({\n        title: \"❌ Booking Failed\",\n        description: error.message || \"Please try again or contact us directly.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: BookingFormData) => {\n    submitBookingMutation.mutate({\n      ...data,\n      serviceType: serviceType || 'consultation',\n    });\n  };\n\n  if (!serviceType) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Please select a service type above to continue booking.</p>\n      </div>\n    );\n  }\n\n  // Show success state after submission\n  if (isSubmitted) {\n    return (\n      <div className=\"text-center py-12 space-y-6\">\n        <div className=\"w-16 h-16 mx-auto bg-green-100 rounded-full flex items-center justify-center\">\n          <CheckCircle className=\"w-8 h-8 text-green-600\" />\n        </div>\n        <div>\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Booking Request Submitted!</h3>\n          <p className=\"text-gray-600 mb-4\">\n            Thank you! We've received your booking request and will contact you within 24 hours to confirm your appointment.\n          </p>\n          <p className=\"text-sm text-gray-500\">\n            An email notification has been sent to our team with your details.\n          </p>\n        </div>\n        <Button \n          onClick={() => setIsSubmitted(false)}\n          variant=\"outline\"\n          className=\"rounded-2xl\"\n        >\n          Schedule Another Appointment\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-8\">\n      {/* Personal Information */}\n      <div className=\"space-y-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Contact Information</h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"fullName\" className=\"text-base font-medium\">Full Name *</Label>\n            <Input\n              id=\"fullName\"\n              {...register(\"fullName\")}\n              placeholder=\"Enter your full name\"\n              className={`mt-2 h-12 ${errors.fullName ? \"border-red-500\" : \"\"}`}\n            />\n            {errors.fullName && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.fullName.message}</p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"email\" className=\"text-base font-medium\">Email Address *</Label>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              {...register(\"email\")}\n              placeholder=\"your@email.com\"\n              className={`mt-2 h-12 ${errors.email ? \"border-red-500\" : \"\"}`}\n            />\n            {errors.email && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <Label htmlFor=\"phone\" className=\"text-base font-medium\">Phone Number *</Label>\n          <Input\n            id=\"phone\"\n            type=\"tel\"\n            {...register(\"phone\")}\n            placeholder=\"+1 (555) 123-4567\"\n            defaultValue=\"+1 \"\n            className={`mt-2 h-12 ${errors.phone ? \"border-red-500\" : \"\"}`}\n          />\n          {errors.phone && (\n            <p className=\"text-red-500 text-sm mt-1\">{errors.phone.message}</p>\n          )}\n        </div>\n      </div>\n\n      {/* Scheduling */}\n      <div className=\"space-y-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Preferred Schedule</h3>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"preferredDate\" className=\"text-base font-medium\">Preferred Date *</Label>\n            <Input\n              id=\"preferredDate\"\n              type=\"date\"\n              {...register(\"preferredDate\")}\n              min={new Date().toISOString().split('T')[0]}\n              className={`mt-2 h-12 ${errors.preferredDate ? \"border-red-500\" : \"\"}`}\n            />\n            {errors.preferredDate && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.preferredDate.message}</p>\n            )}\n          </div>\n\n          <div>\n            <Label htmlFor=\"preferredTime\" className=\"text-base font-medium\">Preferred Time *</Label>\n            <Select onValueChange={(value) => setValue(\"preferredTime\", value)}>\n              <SelectTrigger className={`mt-2 h-12 ${errors.preferredTime ? \"border-red-500\" : \"\"}`}>\n                <SelectValue placeholder=\"Select time\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"09:00\">9:00 AM</SelectItem>\n                <SelectItem value=\"10:00\">10:00 AM</SelectItem>\n                <SelectItem value=\"11:00\">11:00 AM</SelectItem>\n                <SelectItem value=\"12:00\">12:00 PM</SelectItem>\n                <SelectItem value=\"13:00\">1:00 PM</SelectItem>\n                <SelectItem value=\"14:00\">2:00 PM</SelectItem>\n                <SelectItem value=\"15:00\">3:00 PM</SelectItem>\n                <SelectItem value=\"16:00\">4:00 PM</SelectItem>\n                <SelectItem value=\"17:00\">5:00 PM</SelectItem>\n              </SelectContent>\n            </Select>\n            {errors.preferredTime && (\n              <p className=\"text-red-500 text-sm mt-1\">{errors.preferredTime.message}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div>\n            <Label htmlFor=\"timezone\" className=\"text-base font-medium\">Timezone *</Label>\n            <Select onValueChange={(value) => setValue(\"timezone\", value)} defaultValue=\"America/New_York\">\n              <SelectTrigger className=\"mt-2 h-12\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"America/New_York\">Eastern Time (ET)</SelectItem>\n                <SelectItem value=\"America/Chicago\">Central Time (CT)</SelectItem>\n                <SelectItem value=\"America/Denver\">Mountain Time (MT)</SelectItem>\n                <SelectItem value=\"America/Los_Angeles\">Pacific Time (PT)</SelectItem>\n                <SelectItem value=\"America/Toronto\">Toronto (ET)</SelectItem>\n                <SelectItem value=\"America/Vancouver\">Vancouver (PT)</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div>\n            <Label htmlFor=\"contactMethod\" className=\"text-base font-medium\">Preferred Contact Method *</Label>\n            <Select onValueChange={(value) => setValue(\"contactMethod\", value as \"phone\" | \"email\" | \"video\")} defaultValue=\"video\">\n              <SelectTrigger className=\"mt-2 h-12\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"video\">Video Call (Zoom)</SelectItem>\n                <SelectItem value=\"phone\">Phone Call</SelectItem>\n                <SelectItem value=\"email\">Email</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      {/* Additional Information */}\n      <div className=\"space-y-3\">\n        <Label htmlFor=\"message\" className=\"text-base font-medium\">Additional Information (Optional)</Label>\n        <Textarea\n          id=\"message\"\n          {...register(\"message\")}\n          placeholder=\"Tell us about your specific needs, questions, or any special requirements...\"\n          rows={4}\n          className=\"mt-2\"\n        />\n      </div>\n\n      {/* Submit */}\n      <div className=\"pt-6\">\n        <Button \n          type=\"submit\" \n          disabled={isSubmitting || submitBookingMutation.isPending}\n          onClick={() => {\n            // Track Google Analytics event\n            trackEvent('consultation_booking', 'engagement', 'Schedule Free Consultation');\n          }}\n          className=\"w-full h-14 text-lg font-semibold bg-primary hover:bg-primary/90 text-white rounded-2xl transition-colors duration-200 shadow-lg disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {(isSubmitting || submitBookingMutation.isPending) ? (\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n              Submitting...\n            </div>\n          ) : (\n            `Schedule ${serviceType === 'consultation' ? 'Free Consultation' : 'Provider Meeting'}`\n          )}\n        </Button>\n        \n        <div className=\"mt-6 p-5 bg-blue-50 rounded-2xl text-sm text-blue-900/80 border border-blue-100\">\n          <div className=\"flex items-start gap-3\">\n            <CheckCircle className=\"w-5 h-5 mt-0.5 flex-shrink-0\" />\n            <div>\n              <p className=\"font-medium mb-2\">What happens next:</p>\n              <ul className=\"text-sm space-y-2\">\n                <li>📧 Confirmation email sent immediately</li>\n                <li>📞 Our team will call within 24 hours to confirm details</li>\n                <li>🎥 Calendar invite with meeting link will be sent</li>\n                <li>⏰ Reminder notification 1 hour before appointment</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default function BookingPage() {\n  const { t } = useLanguage();\n  const [selectedService, setSelectedService] = useState<'consultation' | 'provider' | null>(null);\n\n  // Scroll to top when component mounts or when hash includes 'top'\n  useEffect(() => {\n    if (window.location.hash.includes('top') || window.location.hash === '#top') {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      // Clean up the hash\n      window.history.replaceState({}, document.title, window.location.pathname);\n    } else {\n      // Always scroll to top on booking page load\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n  }, []);\n\n  const services = [\n    {\n      id: 'consultation' as const,\n      title: 'Free Patient Consultation',\n      description: 'Schedule a free consultation to discuss your dental needs and treatment options in Mexico',\n      icon: <User className=\"w-8 h-8 text-primary\" />,\n      duration: '30 minutes',\n      price: 'FREE',\n      features: [\n        'Personalized treatment recommendations',\n        'Cost estimates and financing options',\n        'Travel and accommodation guidance',\n        'Answer to all your questions'\n      ],\n      doctor: {\n        name: 'Dr. Maria Martinez',\n        title: 'Senior Dental Consultant',\n        company: 'MxSmiles - Dental Tourism Specialist',\n        image: '/api/placeholder/64/64'\n      }\n    },\n    {\n      id: 'provider' as const,\n      title: 'Provider Partnership Meeting',\n      description: 'Join our network of dental providers and expand your practice with international patients',\n      icon: <Building className=\"w-8 h-8 text-green-600\" />,\n      duration: '45 minutes',\n      price: 'FREE',\n      features: [\n        'Partnership benefits discussion',\n        'Network requirements review',\n        'Revenue potential analysis',\n        'Next steps and onboarding'\n      ],\n      doctor: {\n        name: 'Dr. Carlos Rodriguez',\n        title: 'Partnership Director',\n        company: 'MxSmiles - Provider Relations',\n        image: '/api/placeholder/64/64'\n      }\n    }\n  ];\n\n  const selectedServiceData = services.find(s => s.id === selectedService);\n\n  // Show booking form when service is selected\n  if (selectedService && selectedServiceData) {\n    return (\n      <>\n        <BookingSEO />\n        <div className=\"min-h-screen bg-gray-50 py-12\">\n          <div className=\"max-w-5xl mx-auto px-6\">\n            <div className=\"mt-16 grid lg:grid-cols-2 gap-12\">\n              {/* Service Details */}\n              <Card>\n                <CardHeader className=\"text-center pb-8\">\n                  <div className=\"flex justify-center mb-6\">\n                    {selectedServiceData.icon}\n                  </div>\n                  <CardTitle className=\"text-xl mb-4\">{selectedServiceData.title}</CardTitle>\n                  <CardDescription className=\"text-base\">\n                    {selectedServiceData.description}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-8 pt-0\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Clock className=\"w-4 h-4\" />\n                      <span>{selectedServiceData.duration}</span>\n                    </div>\n                    <Badge className=\"bg-green-100 text-green-800\">\n                      {selectedServiceData.price}\n                    </Badge>\n                  </div>\n\n                  <div className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\n                    <Avatar>\n                      <AvatarImage src={selectedServiceData.doctor.image} />\n                      <AvatarFallback>{selectedServiceData.doctor.name.charAt(0)}</AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <p className=\"font-medium text-sm\">{selectedServiceData.doctor.name}</p>\n                      <p className=\"text-xs text-gray-600\">{selectedServiceData.doctor.title}</p>\n                      <p className=\"text-xs text-gray-500\">{selectedServiceData.doctor.company}</p>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">What's included:</h4>\n                    <ul className=\"space-y-2\">\n                      {selectedServiceData.features.map((feature, index) => (\n                        <li key={index} className=\"flex items-start gap-2\">\n                          <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-sm text-gray-600\">{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n\n                  <div className=\"bg-blue-50 p-4 rounded-lg\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <Star className=\"w-4 h-4 text-yellow-500\" />\n                      <span className=\"font-medium text-sm\">4.9/5 Rating</span>\n                    </div>\n                    <p className=\"text-xs text-gray-600\">Based on 2,800+ consultations</p>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Booking Widget */}\n              <Card>\n                <CardHeader className=\"pb-8\">\n                  <CardTitle className=\"mb-2\">Schedule Your Meeting</CardTitle>\n                  <CardDescription>\n                    Choose your preferred date and time\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <BookingForm serviceType={selectedService} />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <BookingSEO />\n      <div className=\"min-h-screen bg-gray-50 py-24\">\n        <div className=\"max-w-6xl mx-auto px-6\">\n          {/* Header */}\n          <div className=\"text-center mb-20\">\n            <h1 className=\"text-4xl font-bold text-gray-900 mb-6\">Book Your Appointment</h1>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Schedule a free consultation or provider partnership meeting with our expert team\n            </p>\n          </div>\n\n          {/* Service Selection */}\n          <div className=\"grid md:grid-cols-2 gap-12 max-w-5xl mx-auto\">\n            {services.map((service) => (\n              <Card \n                key={service.id}\n                className=\"cursor-pointer hover:shadow-lg transition-all duration-200 border-2 hover:border-blue-200\"\n                onClick={() => setSelectedService(service.id)}\n              >\n                <CardHeader className=\"text-center pb-8\">\n                  <div className=\"flex justify-center mb-6\">\n                    {service.icon}\n                  </div>\n                  <CardTitle className=\"text-xl mb-4\">{service.title}</CardTitle>\n                  <CardDescription className=\"text-base\">\n                    {service.description}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"pt-0\">\n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span className=\"flex items-center gap-2\">\n                        <Clock className=\"w-4 h-4\" />\n                        {service.duration}\n                      </span>\n                      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\n                        {service.price}\n                      </Badge>\n                    </div>\n\n                    <Separator />\n\n                    <div>\n                      <h4 className=\"font-semibold mb-3\">Includes:</h4>\n                      <ul className=\"space-y-2\">\n                        {service.features.slice(0, 3).map((feature, index) => (\n                          <li key={index} className=\"flex items-start gap-2 text-sm text-gray-600\">\n                            <CheckCircle className=\"w-3 h-3 text-green-500 mt-1 flex-shrink-0\" />\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n\n                    <Button className=\"w-full\" size=\"lg\">\n                      Schedule {service.id === 'consultation' ? 'Free Consultation' : 'Provider Meeting'}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Trust Signals */}\n          <div className=\"mt-20 text-center\">\n            <div className=\"grid md:grid-cols-3 gap-12 max-w-5xl mx-auto\">\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mb-3\">\n                  <Users className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <h3 className=\"font-semibold mb-1\">15,000+ Patients</h3>\n                <p className=\"text-sm text-gray-600\">Successfully treated with our network</p>\n              </div>\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mb-3\">\n                  <Star className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <h3 className=\"font-semibold mb-1\">4.9/5 Rating</h3>\n                <p className=\"text-sm text-gray-600\">Based on verified patient reviews</p>\n              </div>\n              <div className=\"flex flex-col items-center\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mb-3\">\n                  <CheckCircle className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <h3 className=\"font-semibold mb-1\">Professional Care</h3>\n                <p className=\"text-sm text-gray-600\">Board-certified dentists and modern facilities</p>\n              </div>\n            </div>\n\n            <div className=\"mt-12 p-8 bg-blue-600 text-white rounded-lg max-w-2xl mx-auto\">\n              <h3 className=\"text-2xl font-bold mb-4\">Ready to Get Started?</h3>\n              <p className=\"text-blue-100 mb-6\">\n                Select a service above to schedule your free consultation or partnership meeting\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button \n                  variant=\"secondary\" \n                  size=\"lg\"\n                  onClick={() => setSelectedService('consultation')}\n                >\n                  Book Patient Consultation\n                </Button>\n                <Button \n                  size=\"lg\"\n                  className=\"bg-white text-blue-600 hover:bg-gray-100 border-2 border-white font-semibold\"\n                  onClick={() => setSelectedService('provider')}\n                >\n                  Schedule Provider Meeting\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["Separator","React.forwardRef","className","orientation","decorative","props","ref","jsx","SeparatorPrimitive.Root","cn","displayName","Avatar","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","bookingSchema","z.object","fullName","z.string","min","email","phone","preferredDate","preferredTime","timezone","contactMethod","z.enum","message","optional","BookingForm","serviceType","toast","useToast","isSubmitted","setIsSubmitted","useState","register","handleSubmit","formState","errors","isSubmitting","setValue","reset","useForm","resolver","zodResolver","defaultValues","submitBookingMutation","useMutation","mutationFn","async","data","backendData","timeZone","serviceInterest","treatmentInterest","consultationType","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","onSuccess","title","description","onError","error","variant","jsxs","children","CheckCircle","Button","onClick","onSubmit","mutate","Label","htmlFor","Input","id","placeholder","type","defaultValue","Date","toISOString","split","Select","onValueChange","value","SelectTrigger","SelectValue","SelectContent","SelectItem","Textarea","rows","disabled","isPending","window","gtag","event_category","event_label","BookingPage","t","useLanguage","selectedService","setSelectedService","useEffect","location","hash","includes","scrollTo","top","behavior","history","replaceState","document","pathname","services","icon","User","duration","price","features","doctor","name","company","image","Building","selectedServiceData","find","s","Fragment","BookingSEO","Card","CardHeader","CardTitle","CardDescription","CardContent","Clock","Badge","src","charAt","map","feature","index","Star","service","slice","size","Users"],"mappings":"giBAgEO,MC3DDA,EAAYC,EAAAA,WAIhB,EACIC,YAAWC,cAAc,aAAcC,cAAa,KAASC,GAC/DC,IAEAC,EAAAA,IAACC,EAAA,CACCF,MACAF,aACAD,cACAD,UAAWO,EACT,qBACgB,eAAhBN,EAA+B,iBAAmB,iBAClDD,MAEEG,KAIVL,EAAUU,YAAcF,EAAwBE,YCnBhD,MAAMC,EAASV,EAAAA,WAGb,EAAGC,eAAcG,GAASC,IAC1BC,EAAAA,IAACK,EAAA,CACCN,MACAJ,UAAWO,EACT,gEACAP,MAEEG,KAGRM,EAAOD,YAAcE,EAAqBF,YAE1C,MAAMG,EAAcZ,EAAAA,WAGlB,EAAGC,eAAcG,GAASC,IAC1BC,EAAAA,IAACO,EAAA,CACCR,MACAJ,UAAWO,EAAG,8BAA+BP,MACzCG,KAGRQ,EAAYH,YAAcI,EAAsBJ,YAEhD,MAAMK,EAAiBd,EAAAA,WAGrB,EAAGC,eAAcG,GAASC,IAC1BC,EAAAA,IAACS,EAAA,CACCV,MACAJ,UAAWO,EACT,uEACAP,MAEEG,KAGRU,EAAeL,YAAcM,EAAyBN,YCzBtD,MAAMO,EAAgBC,EAAS,CAC7BC,SAAUC,IAAWC,IAAI,EAAG,sCAC5BC,MAAOF,IAAWE,MAAM,sCACxBC,MAAOH,IAAWC,IAAI,GAAI,qCAC1BG,cAAeJ,IAAWC,IAAI,EAAG,kCACjCI,cAAeL,IAAWC,IAAI,EAAG,kCACjCK,SAAUN,IAAWC,IAAI,EAAG,+BAC5BM,cAAeC,EAAO,CAAC,QAAS,QAAS,UACzCC,QAAST,IAAWU,aAMtB,SAASC,GAAYC,YAAEA,IACrB,MAAMC,MAAEA,GAAUC,KACXC,EAAaC,GAAkBC,EAAAA,UAAS,IACzCC,SAAEA,EAAAC,aAAUA,EAAcC,WAAWC,OAAEA,EAAAC,aAAQA,GAAAC,SAAgBA,EAAAC,MAAUA,GAAUC,EAAyB,CAChHC,SAAUC,EAAY9B,GACtB+B,cAAe,CACbrB,cAAe,QACfD,SAAU,mBACVH,MAAO,SAIL0B,EAAwBC,EAAY,CACxCC,WAAYC,MAAOC,IAEjB,MAAMC,EAAc,CAClBnC,SAAUkC,EAAKlC,SACfG,MAAO+B,EAAK/B,MACZC,MAAO8B,EAAK9B,MACZC,cAAe6B,EAAK7B,cACpBC,cAAe4B,EAAK5B,cACpB8B,SAAUF,EAAK3B,SACfC,cAAe0B,EAAK1B,cACpB6B,gBAAsC,iBAArBH,EAAKrB,YAAiC,4BAA8B,uBACrFyB,kBAAwC,iBAArBJ,EAAKrB,YAAiC,4BAA8B,uBACvFH,QAASwB,EAAKxB,SAAW,GACzB6B,iBAAkBL,EAAK1B,eAGnBgC,QAAiBC,MAAM,oBAAqB,CAChDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUX,KAGvB,IAAKK,EAASO,GAAI,CAChB,MAAMC,QAAkBR,EAASS,OAEjC,MAAM,IAAIC,MAAMF,EAAUtC,SAAW,2BACvC,CAEA,OAAO8B,EAASS,QAElBE,UAAYjB,IACVjB,GAAe,GACfH,EAAM,CACJsC,MAAO,+BACPC,YAAa,8GAEf5B,KAEF6B,QAAUC,IAERzC,EAAM,CACJsC,MAAO,mBACPC,YAAaE,EAAM7C,SAAW,2CAC9B8C,QAAS,mBAYf,OAAK3C,EASDG,IAEAyC,KAAC,MAAA,CAAI1E,UAAU,8BACb2E,SAAA,CAAAtE,EAAAA,IAAC,OAAIL,UAAU,+EACb2E,eAACC,EAAA,CAAY5E,UAAU,oCAExB,MAAA,CACC2E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,2CAA2C2E,SAAA,+BACzDtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,qBAAqB2E,SAAA,qHAGlCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wBAAwB2E,SAAA,0EAIvCtE,EAAAA,IAACwE,EAAA,CACCC,QAAS,IAAM5C,GAAe,GAC9BuC,QAAQ,UACRzE,UAAU,cACX2E,SAAA,2CAQJ,OAAA,CAAKI,SAAU1C,EA3CAc,IAChBJ,EAAsBiC,OAAO,IACxB7B,EACHrB,YAAaA,GAAe,mBAwCU9B,UAAU,YAEhD2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,YACb2E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,6BAA6B2E,SAAA,0BAE3CD,KAAC,MAAA,CAAI1E,UAAU,wCACb2E,SAAA,CAAAD,OAAC,MAAA,CACCC,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,WAAWlF,UAAU,wBAAwB2E,SAAA,gBAC5DtE,EAAAA,IAAC8E,EAAA,CACCC,GAAG,cACChD,EAAS,YACbiD,YAAY,uBACZrF,UAAW,cAAauC,EAAOtB,SAAW,iBAAmB,MAE9DsB,EAAOtB,UACNZ,MAAC,IAAA,CAAEL,UAAU,4BAA6B2E,SAAApC,EAAOtB,SAASU,oBAI7D,MAAA,CACCgD,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,QAAQlF,UAAU,wBAAwB2E,SAAA,oBACzDtE,EAAAA,IAAC8E,EAAA,CACCC,GAAG,QACHE,KAAK,WACDlD,EAAS,SACbiD,YAAY,iBACZrF,UAAW,cAAauC,EAAOnB,MAAQ,iBAAmB,MAE3DmB,EAAOnB,OACNf,MAAC,IAAA,CAAEL,UAAU,4BAA6B2E,SAAApC,EAAOnB,MAAMO,uBAK5D,MAAA,CACCgD,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,QAAQlF,UAAU,wBAAwB2E,SAAA,mBACzDtE,EAAAA,IAAC8E,EAAA,CACCC,GAAG,QACHE,KAAK,SACDlD,EAAS,SACbiD,YAAY,oBACZE,aAAa,MACbvF,UAAW,cAAauC,EAAOlB,MAAQ,iBAAmB,MAE3DkB,EAAOlB,OACNhB,MAAC,IAAA,CAAEL,UAAU,4BAA6B2E,SAAApC,EAAOlB,MAAMM,kBAM7D+C,KAAC,MAAA,CAAI1E,UAAU,YACb2E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,6BAA6B2E,SAAA,yBAE3CD,KAAC,MAAA,CAAI1E,UAAU,wCACb2E,SAAA,CAAAD,OAAC,MAAA,CACCC,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,gBAAgBlF,UAAU,wBAAwB2E,SAAA,qBACjEtE,EAAAA,IAAC8E,EAAA,CACCC,GAAG,gBACHE,KAAK,UACDlD,EAAS,iBACbjB,KAAA,IAASqE,MAAOC,cAAcC,MAAM,KAAK,GACzC1F,UAAW,cAAauC,EAAOjB,cAAgB,iBAAmB,MAEnEiB,EAAOjB,eACNjB,MAAC,IAAA,CAAEL,UAAU,4BAA6B2E,SAAApC,EAAOjB,cAAcK,oBAIlE,MAAA,CACCgD,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,gBAAgBlF,UAAU,wBAAwB2E,SAAA,qBACjED,OAACiB,GAAOC,cAAgBC,GAAUpD,EAAS,gBAAiBoD,GAC1DlB,SAAA,CAAAtE,EAAAA,IAACyF,EAAA,CAAc9F,UAAW,cAAauC,EAAOhB,cAAgB,iBAAmB,IAC/EoD,SAAAtE,MAAC0F,EAAA,CAAYV,YAAY,yBAE1BW,EAAA,CACCrB,SAAA,CAAAtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,YAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,aAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,aAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,aAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,YAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,YAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,YAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,YAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,kBAG7BpC,EAAOhB,eACNlB,MAAC,IAAA,CAAEL,UAAU,4BAA6B2E,SAAApC,EAAOhB,cAAcI,kBAKrE+C,KAAC,MAAA,CAAI1E,UAAU,wCACb2E,SAAA,CAAAD,OAAC,MAAA,CACCC,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,WAAWlF,UAAU,wBAAwB2E,SAAA,eAC5DD,EAAAA,KAACiB,EAAA,CAAOC,cAAgBC,GAAUpD,EAAS,WAAYoD,GAAQN,aAAa,mBAC1EZ,SAAA,CAAAtE,MAACyF,EAAA,CAAc9F,UAAU,YACvB2E,SAAAtE,MAAC0F,eAEFC,EAAA,CACCrB,SAAA,CAAAtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,mBAAmBlB,SAAA,sBACrCtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,kBAAkBlB,SAAA,sBACpCtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,iBAAiBlB,SAAA,uBACnCtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,sBAAsBlB,SAAA,sBACxCtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,kBAAkBlB,SAAA,iBACpCtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,oBAAoBlB,SAAA,mCAK3C,MAAA,CACCA,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,gBAAgBlF,UAAU,wBAAwB2E,SAAA,+BACjED,EAAAA,KAACiB,EAAA,CAAOC,cAAgBC,GAAUpD,EAAS,gBAAiBoD,GAAuCN,aAAa,QAC9GZ,SAAA,CAAAtE,MAACyF,EAAA,CAAc9F,UAAU,YACvB2E,SAAAtE,MAAC0F,eAEFC,EAAA,CACCrB,SAAA,CAAAtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,sBAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,eAC1BtE,EAAAA,IAAC4F,EAAA,CAAWJ,MAAM,QAAQlB,SAAA,2BAQpCD,KAAC,MAAA,CAAI1E,UAAU,YACb2E,SAAA,CAAAtE,MAAC4E,EAAA,CAAMC,QAAQ,UAAUlF,UAAU,wBAAwB2E,SAAA,sCAC3DtE,EAAAA,IAAC6F,EAAA,CACCd,GAAG,aACChD,EAAS,WACbiD,YAAY,+EACZc,KAAM,EACNnG,UAAU,cAKd0E,KAAC,MAAA,CAAI1E,UAAU,OACb2E,SAAA,CAAAtE,EAAAA,IAACwE,EAAA,CACCS,KAAK,SACLc,SAAU5D,GAAgBO,EAAsBsD,UAChDvB,QAAS,KHxNK,oBAAXwB,QAA2BA,OAAOC,MAE7CD,OAAOC,KAAK,QGwNS,uBHxNQ,CAC3BC,eGuN2C,aHtN3CC,YGsNyD,6BHrNzDZ,MAPFA,aG8NQ7F,UAAU,mLAER2E,YAAgB5B,EAAsBsD,UACtC3B,EAAAA,KAAC,MAAA,CAAI1E,UAAU,0BACb2E,SAAA,GAAAtE,IAAC,MAAA,CAAIL,UAAU,iFAAqF,mBAItG,aAA4B,iBAAhB8B,EAAiC,oBAAsB,4BAItE,MAAA,CAAI9B,UAAU,kFACb2E,SAAAD,EAAAA,KAAC,MAAA,CAAI1E,UAAU,yBACb2E,SAAA,GAAAtE,IAACuE,EAAA,CAAY5E,UAAU,wCACtB,MAAA,CACC2E,SAAA,CAAAtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,mBAAmB2E,SAAA,yBAChCD,KAAC,KAAA,CAAG1E,UAAU,oBACZ2E,SAAA,GAAAtE,IAAC,MAAGsE,SAAA,6CACJtE,IAAC,MAAGsE,SAAA,+DACJtE,IAAC,MAAGsE,SAAA,wDACJtE,IAAC,MAAGsE,SAAA,yEA3MdtE,IAAC,OAAIL,UAAU,mBACb2E,eAAC,IAAA,CAAE3E,UAAU,gBAAgB2E,SAAA,6DAkNrC,CAEA,SAAwB+B,IACtB,MAAQC,EAAAA,GAAMC,KACPC,EAAiBC,GAAsB3E,EAAAA,SAA6C,MAG3F4E,EAAAA,UAAU,KACJT,OAAOU,SAASC,KAAKC,SAAS,QAAmC,SAAzBZ,OAAOU,SAASC,MAC1DX,OAAOa,SAAS,CAAEC,IAAK,EAAGC,SAAU,WAEpCf,OAAOgB,QAAQC,aAAa,CAAA,EAAIC,SAASnD,MAAOiC,OAAOU,SAASS,WAGhEnB,OAAOa,SAAS,CAAEC,IAAK,EAAGC,SAAU,YAErC,IAEH,MAAMK,EAAW,CACf,CACEtC,GAAI,eACJf,MAAO,4BACPC,YAAa,4FACbqD,KAAMtH,EAAAA,IAACuH,EAAA,CAAK5H,UAAU,yBACtB6H,SAAU,aACVC,MAAO,OACPC,SAAU,CACR,yCACA,uCACA,oCACA,gCAEFC,OAAQ,CACNC,KAAM,qBACN5D,MAAO,2BACP6D,QAAS,uCACTC,MAAO,2BAGX,CACE/C,GAAI,WACJf,MAAO,+BACPC,YAAa,4FACbqD,KAAMtH,EAAAA,IAAC+H,EAAA,CAASpI,UAAU,2BAC1B6H,SAAU,aACVC,MAAO,OACPC,SAAU,CACR,kCACA,8BACA,6BACA,6BAEFC,OAAQ,CACNC,KAAM,uBACN5D,MAAO,uBACP6D,QAAS,gCACTC,MAAO,4BAKPE,EAAsBX,EAASY,KAAKC,GAAKA,EAAEnD,KAAOyB,GAGxD,OAAIA,GAAmBwB,EAEnB3D,EAAAA,KAAA8D,WAAA,CACE7D,SAAA,CAAAtE,EAAAA,IAACoI,EAAA,IACDpI,EAAAA,IAAC,MAAA,CAAIL,UAAU,gCACb2E,WAAAtE,IAAC,MAAA,CAAIL,UAAU,yBACb2E,SAAAD,OAAC,MAAA,CAAI1E,UAAU,mCAEb2E,SAAA,CAAAD,OAACgE,EAAA,CACC/D,SAAA,GAAAD,KAACiE,EAAA,CAAW3I,UAAU,mBACpB2E,SAAA,CAAAtE,EAAAA,IAAC,MAAA,CAAIL,UAAU,2BACZ2E,SAAA0D,EAAoBV,OAEvBtH,EAAAA,IAACuI,EAAA,CAAU5I,UAAU,eAAgB2E,WAAoBN,QACzDhE,EAAAA,IAACwI,EAAA,CAAgB7I,UAAU,YACxB2E,WAAoBL,mBAGzBI,KAACoE,EAAA,CAAY9I,UAAU,iBACrB2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,oCACb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,0BACb2E,SAAA,GAAAtE,IAAC0I,EAAA,CAAM/I,UAAU,cACjBK,IAAC,OAAA,CAAMsE,SAAA0D,EAAoBR,cAE7BxH,EAAAA,IAAC2I,EAAA,CAAMhJ,UAAU,8BACd2E,WAAoBmD,aAIzBpD,KAAC,MAAA,CAAI1E,UAAU,oDACb2E,SAAA,CAAAD,OAACjE,EAAA,CACCkE,SAAA,CAAAtE,EAAAA,IAACM,EAAA,CAAYsI,IAAKZ,EAAoBL,OAAOG,cAC5CtH,EAAA,CAAgB8D,SAAA0D,EAAoBL,OAAOC,KAAKiB,OAAO,eAEzD,MAAA,CACCvE,SAAA,CAAAtE,MAAC,IAAA,CAAEL,UAAU,sBAAuB2E,SAAA0D,EAAoBL,OAAOC,aAC9D,IAAA,CAAEjI,UAAU,wBAAyB2E,SAAA0D,EAAoBL,OAAO3D,cAChE,IAAA,CAAErE,UAAU,wBAAyB2E,SAAA0D,EAAoBL,OAAOE,uBAIpE,MAAA,CACCvD,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,qBAAqB2E,SAAA,uBACnCtE,IAAC,KAAA,CAAGL,UAAU,YACX2E,SAAA0D,EAAoBN,SAASoB,IAAI,CAACC,EAASC,IAC1C3E,OAAC,KAAA,CAAe1E,UAAU,yBACxB2E,SAAA,GAAAtE,IAACuE,EAAA,CAAY5E,UAAU,gDACvBK,EAAAA,IAAC,OAAA,CAAKL,UAAU,wBAAyB2E,SAAAyE,MAFlCC,WAQf3E,KAAC,MAAA,CAAI1E,UAAU,4BACb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,+BACb2E,SAAA,GAAAtE,IAACiJ,EAAA,CAAKtJ,UAAU,4BAChBK,EAAAA,IAAC,OAAA,CAAKL,UAAU,sBAAsB2E,SAAA,oBAExCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wBAAwB2E,SAAA,kDAM1C+D,EAAA,CACC/D,SAAA,GAAAD,KAACiE,EAAA,CAAW3I,UAAU,OACpB2E,SAAA,CAAAtE,EAAAA,IAACuI,EAAA,CAAU5I,UAAU,OAAO2E,SAAA,4BAC5BtE,IAACwI,GAAgBlE,SAAA,2CAInBtE,EAAAA,IAACyI,GAAY9I,UAAU,OACrB2E,eAAC9C,EAAA,CAAYC,YAAa+E,mBAWxCnC,EAAAA,KAAA8D,WAAA,CACE7D,SAAA,CAAAtE,EAAAA,IAACoI,EAAA,UACA,MAAA,CAAIzI,UAAU,gCACb2E,SAAAD,EAAAA,KAAC,MAAA,CAAI1E,UAAU,yBAEb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,oBACb2E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,wCAAwC2E,SAAA,0BACtDtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,0CAA0C2E,SAAA,+FAMxD,MAAA,CAAI3E,UAAU,+CACZ2E,SAAA+C,EAASyB,IAAKI,GACb7E,EAAAA,KAACgE,EAAA,CAEC1I,UAAU,4FACV8E,QAAS,IAAMgC,EAAmByC,EAAQnE,IAE1CT,SAAA,GAAAD,KAACiE,EAAA,CAAW3I,UAAU,mBACpB2E,SAAA,CAAAtE,EAAAA,IAAC,MAAA,CAAIL,UAAU,2BACZ2E,SAAA4E,EAAQ5B,OAEXtH,EAAAA,IAACuI,EAAA,CAAU5I,UAAU,eAAgB2E,WAAQN,QAC7ChE,EAAAA,IAACwI,EAAA,CAAgB7I,UAAU,YACxB2E,WAAQL,uBAGZwE,EAAA,CAAY9I,UAAU,OACrB2E,SAAAD,EAAAA,KAAC,MAAA,CAAI1E,UAAU,YACb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,4CACb2E,SAAA,GAAAD,KAAC,OAAA,CAAK1E,UAAU,0BACd2E,SAAA,GAAAtE,IAAC0I,EAAA,CAAM/I,UAAU,YAChBuJ,EAAQ1B,kBAEVmB,EAAA,CAAMvE,QAAQ,YAAYzE,UAAU,8BAClC2E,WAAQmD,iBAIZhI,EAAA,WAEA,MAAA,CACC6E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,qBAAqB2E,SAAA,oBAClC,KAAA,CAAG3E,UAAU,YACX2E,SAAA4E,EAAQxB,SAASyB,MAAM,EAAG,GAAGL,IAAI,CAACC,EAASC,IAC1C3E,EAAAA,KAAC,KAAA,CAAe1E,UAAU,+CACxB2E,SAAA,GAAAtE,IAACuE,EAAA,CAAY5E,UAAU,8CACtBoJ,IAFMC,SAQf3E,EAAAA,KAACG,EAAA,CAAO7E,UAAU,SAASyJ,KAAK,KAAK9E,SAAA,CAAA,YACV,iBAAf4E,EAAQnE,GAAwB,oBAAsB,6BAxCjEmE,EAAQnE,SAiDnBV,KAAC,MAAA,CAAI1E,UAAU,oBACb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,+CACb2E,SAAA,GAAAD,KAAC,MAAA,CAAI1E,UAAU,6BACb2E,SAAA,CAAAtE,EAAAA,IAAC,OAAIL,UAAU,2EACb2E,eAAC+E,EAAA,CAAM1J,UAAU,4BAEnBK,EAAAA,IAAC,KAAA,CAAGL,UAAU,qBAAqB2E,SAAA,qBACnCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wBAAwB2E,SAAA,+CAEvCD,KAAC,MAAA,CAAI1E,UAAU,6BACb2E,SAAA,CAAAtE,EAAAA,IAAC,OAAIL,UAAU,4EACb2E,eAAC2E,EAAA,CAAKtJ,UAAU,6BAElBK,EAAAA,IAAC,KAAA,CAAGL,UAAU,qBAAqB2E,SAAA,iBACnCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wBAAwB2E,SAAA,2CAEvCD,KAAC,MAAA,CAAI1E,UAAU,6BACb2E,SAAA,CAAAtE,EAAAA,IAAC,OAAIL,UAAU,6EACb2E,eAACC,EAAA,CAAY5E,UAAU,8BAEzBK,EAAAA,IAAC,KAAA,CAAGL,UAAU,qBAAqB2E,SAAA,sBACnCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,wBAAwB2E,SAAA,2DAIzCD,KAAC,MAAA,CAAI1E,UAAU,gEACb2E,SAAA,CAAAtE,EAAAA,IAAC,KAAA,CAAGL,UAAU,0BAA0B2E,SAAA,0BACxCtE,EAAAA,IAAC,IAAA,CAAEL,UAAU,qBAAqB2E,SAAA,uFAGlCD,KAAC,MAAA,CAAI1E,UAAU,iDACb2E,SAAA,CAAAtE,EAAAA,IAACwE,EAAA,CACCJ,QAAQ,YACRgF,KAAK,KACL3E,QAAS,IAAMgC,EAAmB,gBACnCnC,SAAA,8BAGDtE,EAAAA,IAACwE,EAAA,CACC4E,KAAK,KACLzJ,UAAU,+EACV8E,QAAS,IAAMgC,EAAmB,YACnCnC,SAAA,8CAUjB"}