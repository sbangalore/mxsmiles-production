{"version":3,"file":"tanstack-kLVQfJrB.js","sources":["../../../node_modules/@tanstack/query-core/build/modern/subscribable.js","../../../node_modules/@tanstack/query-core/build/modern/utils.js","../../../node_modules/@tanstack/query-core/build/modern/focusManager.js","../../../node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../../node_modules/@tanstack/query-core/build/modern/thenable.js","../../../node_modules/@tanstack/query-core/build/modern/retryer.js","../../../node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../../node_modules/@tanstack/query-core/build/modern/removable.js","../../../node_modules/@tanstack/query-core/build/modern/query.js","../../../node_modules/@tanstack/query-core/build/modern/queryCache.js","../../../node_modules/@tanstack/query-core/build/modern/mutation.js","../../../node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../../node_modules/@tanstack/query-core/build/modern/queryClient.js","../../../node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          this.#revertState = void 0;\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map"],"names":["Subscribable","constructor","this","listeners","Set","subscribe","bind","listener","add","onSubscribe","delete","onUnsubscribe","hasListeners","size","isServer","window","globalThis","noop","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","resolveStaleTime","query","resolveEnabled","enabled","matchQuery","filters","type","exact","fetchStatus","predicate","queryKey","stale","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","status","mutationKey","hashKey","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","every","replaceEqualDeep","array","isPlainArray","aItems","aSize","length","bItems","bSize","copy","aItemsSet","equalItems","i","has","shallowEqualObjects","Array","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","replaceData","prevData","data","structuralSharing","addToEnd","items","item","newItems","slice","addToStart","skipToken","Symbol","ensureQueryFn","fetchOptions","queryFn","initialPromise","Promise","reject","Error","shouldThrowError","throwOnError","params","focusManager","focused","cleanup","setup","super","onFocus","addEventListener","removeEventListener","setEventListener","setFocused","isFocused","forEach","document","visibilityState","onlineManager","online","onOnline","onlineListener","offlineListener","setOnline","isOnline","pendingThenable","resolve","thenable","_resolve","_reject","finalize","assign","catch","reason","defaultRetryDelay","failureCount","min","canFetch","networkMode","CancelledError","revert","silent","isCancelledError","createRetryer","config","continueFn","isRetryCancelled","isResolved","canContinue","canRun","canStart","onSuccess","onError","pause","continueResolve","onPause","then","onContinue","run","promiseOrValue","fn","error","retry","retryDelay","delay","shouldRetry","timeout","onFail","setTimeout","promise","cancel","cancelOptions","abort","continue","cancelRetry","continueRetry","start","defaultScheduler","cb","notifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","scheduleFn","schedule","push","batch","originalQueue","flush","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","createNotifyManager","Removable","gcTimeout","destroy","clearGcTimeout","scheduleGc","gcTime","optionalRemove","updateGcTime","newGcTime","clearTimeout","Query","initialState","revertState","cache","client","retryer","defaultOptions","abortSignalConsumed","setOptions","observers","getQueryCache","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","getDefaultState","meta","remove","setData","newData","dispatch","manual","setState","setStateOptions","reset","some","observer","isDisabled","getObserversCount","isStatic","getCurrentResult","isStaleByTime","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","addObserver","includes","notify","removeObserver","filter","invalidate","fetch","abortController","AbortController","addSignalProperty","object","defineProperty","enumerable","get","signal","fetchFn","queryFnContext","queryFnContext2","createQueryFnContext","persister","context","context2","createFetchContext","behavior","onFetch","onSettled","action","fetchState","reducer","onQueryUpdate","QueryCache","queries","Map","build","defaultQueryOptions","getQueryDefaults","set","queryInMap","clear","getAll","values","defaultedFilters","findAll","event","Mutation","mutationCache","mutationId","failureReason","isPaused","variables","submittedAt","execute","mutationFn","restored","onMutate","runNext","onMutationUpdate","MutationCache","mutations","scopes","defaultMutationOptions","scope","scopeFor","scopedMutations","index","indexOf","splice","mutationsWithSameScope","firstPendingMutation","m","foundMutation","from","resumePausedMutations","pausedMutations","all","map","id","infiniteQueryBehavior","pages","direction","fetchMore","oldPages","oldPageParams","pageParams","currentPage","async","cancelled","fetchPage","param","previous","pageParam","aborted","page","maxPages","addTo","oldData","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","queryCache","queryDefaults","mutationDefaults","mountCount","unsubscribeFocus","unsubscribeOnline","mount","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","input","functionalUpdate","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","defaultedCancelOptions","promises","invalidateQueries","refetchType","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","defaults","queryDefault","setMutationDefaults","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","QueryObserver","selectError","currentThenable","experimental_prefetchInRender","bindMethods","currentQuery","currentQueryInitialState","currentResult","currentResultState","currentResultOptions","selectFn","selectResult","lastQueryWithDefinedData","staleTimeoutId","refetchIntervalId","currentRefetchInterval","trackedProps","shouldFetchOnMount","executeFetch","updateResult","updateTimers","shouldFetchOn","refetchOnWindowFocus","clearStaleTimeout","clearRefetchInterval","prevOptions","prevQuery","updateQuery","mounted","shouldFetchOptionally","updateStaleTimeout","nextRefetchInterval","computeRefetchInterval","updateRefetchInterval","getOptimisticResult","createResult","optimisticResult","trackResult","onPropTracked","Proxy","target","trackProp","Reflect","getCurrentQuery","fetchOptimistic","refetchInterval","nextInterval","setInterval","refetchIntervalInBackground","clearInterval","prevResult","prevResultState","prevResultOptions","queryInitialState","newState","isPlaceholderData","_optimisticResults","fetchOnMount","fetchOptionally","skipSelect","placeholderData","select","isPending","isError","isLoading","nextResult","isSuccess","isInitialLoading","isFetched","isFetchedAfterMount","isRefetching","isLoadingError","isRefetchError","isEnabled","finalizeThenableIfPossible","recreateThenable","pending","prevThenable","notifyOnChangeProps","notifyOnChangePropsValue","includedProps","typedKey","shouldNotifyListeners","notifyOptions","retryOnMount","shouldLoadOnMount","refetchOnMount","field","MutationObserver","currentMutation","mutateOptions","mutate","isIdle"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}